pipeline {
  agent any
  tools {
    jdk 'jdk17'
    maven 'maven'
  }
  environment {
    SCANNER_HOME = tool 'sonar-scanner'
    APP_NAME = "sprint-boot-app"
    RELEASE = "1.0"
    IMAGE_NAME = "myacr1001.azurecr.io/"+"${APP_NAME}"
    IMAGE_TAG = "${RELEASE}-${BUILD_NUMBER}"
  }
  stages {
    stage ('mvn build') {
      steps {
        sh '''
        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
        mvn clean install 
        '''
      } 
    }
    stage ('sonarqube analysis') {
      steps {
        withSonarQubeEnv('sonar-server') {
         sh '''cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean verify sonar:sonar -Dsonar.projectName=spring-boot-app \
         -Dsonar.projectKey=spring-boot-app'''
        }
      }      
    }
    stage ('trivy file scan') {
      steps {
        sh '''
        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
        trivy fs . > tvfile.txt'''
      }
    }
    stage ('image build') {
      steps {
        sh '''
        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
        docker build -t $IMAGE_NAME:$IMAGE_TAG .
        '''
      }
    }
    stage ('trivy image scan') {
      steps {
        sh '''
        trivy image ${IMAGE_NAME}:${IMAGE_TAG} --scanners vuln --exit-code 0 > tvimage.txt
        '''
      }
    }
    stage ('image push to acr') {
      steps {
        azureCLI commands: [[exportVariablesString: '', script: 'az acr login --name myacr1001.azurecr.io']], principalCredentialId: 'AzureSP'
        sh "docker push ${IMAGE_NAME}:${IMAGE_TAG}"
      }
    }
    stage ('delete image') {
      steps {
        sh "docker rmi ${IMAGE_NAME}:${IMAGE_TAG}"
      }
    }
    stage("Update the Deployment file") {
            steps {
                sh """
                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests
                sed -i 's/replaceImageTag/${IMAGE_TAG}/g' deployment.yml
                cat deployment.yml
                """
      }
    }
    stage ('github push') {
      steps {
        sh '''
        cd java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests
        git config --global user.name "dipanjanr640"
        git config --global user.email "dipanjanr640@gmail.com"
        git add deployment.yml
        git commit -m "update manifest file with build no ${BUILD_NUMBER}"
        '''
        withCredentials([gitUsernamePassword(credentialsId: 'github', gitToolName: 'Default')]) {
        sh "git push https://github.com/dipanjanr640/Jenkins-Zero-To-Hero.git HEAD:main"
        }
      }
    }
  }
}
